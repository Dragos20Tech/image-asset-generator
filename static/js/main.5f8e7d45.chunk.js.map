{"version":3,"sources":["components/ImageUploader.tsx","components/ImagePreview.tsx","components/DownloadButton.tsx","components/Footer.tsx","App.tsx","index.tsx"],"names":["ImageUploader","_ref","onUpload","error","setError","useState","_jsxs","className","children","_jsx","type","accept","onChange","event","_event$target$files","file","target","files","includes","ImagePreview","imageSrc","src","String","alt","sizes","width","height","previewSizes","androidSizes","name","iosSizes","DownloadButton","imageData","onPreviewSizeChange","onBackToOriginal","isGenerating","setIsGenerating","selectedSize","setSelectedSize","customWidth","setCustomWidth","customHeight","setCustomHeight","downloadMode","setDownloadMode","aspectRatioLocked","setAspectRatioLocked","originalAspectRatio","setOriginalAspectRatio","upscaleQuality","setUpscaleQuality","useEffect","img","Image","onload","ratio","console","log","concat","resizeImage","resizeImageAdvanced","quality","Promise","resolve","reject","canvas","document","createElement","ctx","getContext","Error","originalWidth","originalHeight","isUpscaling","resizeWithSteps","resizeWithSharpening","imageSmoothingEnabled","imageSmoothingQuality","drawImage","resizedDataUrl","toDataURL","onerror","targetWidth","targetHeight","scaleX","scaleY","Math","max","currentCanvas","currentCtx","currentWidth","currentHeight","nextWidth","min","nextHeight","nextCanvas","nextCtx","getImageData","sharpened","applyUnsharpMask","putImageData","data","result","ImageData","i","length","sharpenKernel","y","x","c","sum","ky","kx","resultIndex","original","round","resizeImageToBlob","toBlob","blob","async","parseInt","isNaN","resizedImageData","updateCustomPreview","handleResetSelection","window","addEventListener","removeEventListener","handleModeChange","mode","handleDownloadStandard","zip","JSZip","imageFolder","folder","promises","map","size","fileName","all","zipBlob","generateAsync","url","URL","createObjectURL","a","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleDownloadAndroid","androidFolder","handleDownloadIOS","iosFolder","handleDownloadCustom","isCustomSizeValid","onClick","viewBox","fill","style","marginRight","d","_Fragment","verticalAlign","getCurrentSizes","handleSizeClick","title","undefined","placeholder","value","e","toString","handleCustomWidthChange","handleCustomHeightChange","handleAspectRatioToggle","toFixed","getCurrentDownloadHandler","disabled","getDownloadIcon","getDownloadButtonText","Footer","rel","App","image","setImage","setImageSrc","previewImageSrc","setPreviewImageSrc","previewSize","setPreviewSize","handleImageUpload","reader","FileReader","readAsDataURL","handlePreviewSizeChange","useCallback","handleBackToOriginal","dispatchEvent","CustomEvent","shouldShowBackButton","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f8e7d45.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\ninterface ImageUploaderProps {\n    onUpload: (file: File) => void;\n}\n\nconst ImageUploader: React.FC<ImageUploaderProps> = ({ onUpload }) => {\n    const [error, setError] = useState<string | null>(null);\n\n    const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        if (file) {\n            const validFormats = ['image/png', 'image/jpeg', 'image/webp', 'image/svg+xml'];\n            if (validFormats.includes(file.type)) {\n                onUpload(file);\n                setError(null);\n            } else {\n                setError('Invalid file format. Please upload a PNG, JPEG, WEBP, or SVG image.');\n            }\n        }\n    };\n\n    return (\n        <div className=\"upload-container\">\n            <label className=\"file-input-wrapper\">\n                <span className=\"upload-icon\">📁</span>\n                Choose Image File\n                <input \n                    type=\"file\" \n                    className=\"file-input\"\n                    accept=\"image/png, image/jpeg, image/webp, image/svg+xml\" \n                    onChange={handleFileChange} \n                />\n            </label>\n            {error && <div className=\"error-message\">{error}</div>}\n        </div>\n    );\n};\n\nexport default ImageUploader;","import React from 'react';\n\ninterface ImagePreviewProps {\n    imageSrc: string | ArrayBuffer | null;\n}\n\nconst ImagePreview: React.FC<ImagePreviewProps> = ({ imageSrc }) => {\n    return (\n        <div className=\"preview-container\">\n            {imageSrc ? (\n                <img \n                    src={String(imageSrc)} \n                    alt=\"Preview\" \n                    className=\"preview-image\"\n                />\n            ) : (\n                <p className=\"no-image-text\">No image uploaded</p>\n            )}\n        </div>\n    );\n};\n\nexport default ImagePreview;","import React, { useState, useEffect } from 'react';\nimport JSZip from 'jszip';\n\ninterface DownloadButtonProps {\n    imageData: string | null;\n    onPreviewSizeChange: (imageData: string | null, size: { width: number; height: number } | null) => void;\n    onBackToOriginal: () => void;\n}\n\ninterface SizeItem {\n    width: number;\n    height: number;\n    name?: string;\n}\n\nconst sizes: SizeItem[] = [\n    { width: 16, height: 16 },\n    { width: 32, height: 32 },\n    { width: 64, height: 64 },\n    { width: 128, height: 128 },\n    { width: 192, height: 192 },\n    { width: 256, height: 256 },\n    { width: 512, height: 512 },\n    { width: 1024, height: 1024 }\n];\n\nconst previewSizes: SizeItem[] = [\n    { width: 16, height: 16 },\n    { width: 32, height: 32 },\n    { width: 64, height: 64 },\n    { width: 128, height: 128 },\n    { width: 192, height: 192 },\n    { width: 256, height: 256 },\n    { width: 512, height: 512 }\n];\n\n// Android icon sizes (App Icons)\nconst androidSizes: SizeItem[] = [\n    { width: 36, height: 36, name: 'mdpi' },\n    { width: 48, height: 48, name: 'hdpi' },\n    { width: 72, height: 72, name: 'xhdpi' },\n    { width: 96, height: 96, name: 'xxhdpi' },\n    { width: 144, height: 144, name: 'xxxhdpi' },\n    { width: 192, height: 192, name: 'xxxhdpi-large' }\n];\n\n// iOS icon sizes (App Icons)\nconst iosSizes: SizeItem[] = [\n    { width: 20, height: 20, name: 'iPhone-notification' },\n    { width: 29, height: 29, name: 'iPhone-settings' },\n    { width: 40, height: 40, name: 'iPhone-spotlight' },\n    { width: 58, height: 58, name: 'iPhone-settings@2x' },\n    { width: 60, height: 60, name: 'iPhone-app' },\n    { width: 80, height: 80, name: 'iPhone-spotlight@2x' },\n    { width: 87, height: 87, name: 'iPhone-settings@3x' },\n    { width: 120, height: 120, name: 'iPhone-app@2x' },\n    { width: 180, height: 180, name: 'iPhone-app@3x' },\n    { width: 1024, height: 1024, name: 'App-Store' }\n];\n\nconst DownloadButton: React.FC<DownloadButtonProps> = ({ imageData, onPreviewSizeChange, onBackToOriginal }) => {\n    const [isGenerating, setIsGenerating] = useState(false);\n    const [selectedSize, setSelectedSize] = useState<{ width: number; height: number } | null>(null);\n    const [customWidth, setCustomWidth] = useState<string>('');\n    const [customHeight, setCustomHeight] = useState<string>('');\n    const [downloadMode, setDownloadMode] = useState<'standard' | 'custom' | 'android' | 'ios'>('standard');\n    const [aspectRatioLocked, setAspectRatioLocked] = useState(false);\n    const [originalAspectRatio, setOriginalAspectRatio] = useState<number>(1);\n    const [upscaleQuality, setUpscaleQuality] = useState<'standard' | 'high' | 'ultra'>('high');\n\n    // Get original image dimensions to calculate aspect ratio\n    useEffect(() => {\n        if (imageData) {\n            const img = new Image();\n            img.onload = () => {\n                const ratio = img.width / img.height;\n                setOriginalAspectRatio(ratio);\n                console.log(`Original aspect ratio: ${ratio} (${img.width}x${img.height})`);\n            };\n            img.src = imageData;\n        }\n    }, [imageData]);\n\n    const resizeImage = (imageSrc: string, width: number, height: number): Promise<string> => {\n        return resizeImageAdvanced(imageSrc, width, height, upscaleQuality);\n    };\n\n    const resizeImageAdvanced = (\n        imageSrc: string, \n        width: number, \n        height: number, \n        quality: 'standard' | 'high' | 'ultra'\n    ): Promise<string> => {\n        return new Promise((resolve, reject) => {\n            const canvas = document.createElement('canvas');\n            canvas.width = width;\n            canvas.height = height;\n\n            const ctx = canvas.getContext('2d');\n            if (!ctx) {\n                reject(new Error('Could not get canvas context'));\n                return;\n            }\n\n            const img = new Image();\n            img.src = imageSrc;\n\n            img.onload = () => {\n                const originalWidth = img.width;\n                const originalHeight = img.height;\n                const isUpscaling = width > originalWidth || height > originalHeight;\n                \n                console.log(`Resizing image to ${width}x${height} with ${quality} quality`);\n                \n                if (!isUpscaling || quality === 'standard') {\n                    // Standard resize\n                    ctx.imageSmoothingEnabled = true;\n                    ctx.imageSmoothingQuality = 'high';\n                    ctx.drawImage(img, 0, 0, width, height);\n                } else if (quality === 'high') {\n                    // Multi-step resizing\n                    resizeWithSteps(ctx, img, originalWidth, originalHeight, width, height);\n                } else if (quality === 'ultra') {\n                    // Ultra quality with sharpening\n                    resizeWithSharpening(ctx, img, originalWidth, originalHeight, width, height);\n                }\n                \n                const resizedDataUrl = canvas.toDataURL('image/png');\n                console.log('Resize successful');\n                resolve(resizedDataUrl);\n            };\n\n            img.onerror = () => {\n                reject(new Error('Failed to load image'));\n            };\n        });\n    };\n\n    // Multi-step resizing for better upscaling quality\n    const resizeWithSteps = (\n        ctx: CanvasRenderingContext2D, \n        img: HTMLImageElement, \n        originalWidth: number, \n        originalHeight: number, \n        targetWidth: number, \n        targetHeight: number\n    ) => {\n        const scaleX = targetWidth / originalWidth;\n        const scaleY = targetHeight / originalHeight;\n        const maxScale = Math.max(scaleX, scaleY);\n        \n        // If scaling is less than 2x, do direct resize\n        if (maxScale < 2) {\n            ctx.imageSmoothingEnabled = true;\n            ctx.imageSmoothingQuality = 'high';\n            ctx.drawImage(img, 0, 0, targetWidth, targetHeight);\n            return;\n        }\n        \n        // For larger scaling, do it in steps of maximum 2x\n        let currentCanvas = document.createElement('canvas');\n        let currentCtx = currentCanvas.getContext('2d');\n        let currentWidth = originalWidth;\n        let currentHeight = originalHeight;\n        \n        if (!currentCtx) return;\n        \n        currentCanvas.width = currentWidth;\n        currentCanvas.height = currentHeight;\n        currentCtx.imageSmoothingEnabled = true;\n        currentCtx.imageSmoothingQuality = 'high';\n        currentCtx.drawImage(img, 0, 0);\n        \n        // Scale in steps of 2x maximum\n        while (currentWidth < targetWidth || currentHeight < targetHeight) {\n            const nextWidth = Math.min(currentWidth * 2, targetWidth);\n            const nextHeight = Math.min(currentHeight * 2, targetHeight);\n            const nextCanvas = document.createElement('canvas');\n            const nextCtx = nextCanvas.getContext('2d');\n            if (!nextCtx) return;\n            \n            nextCanvas.width = nextWidth;\n            nextCanvas.height = nextHeight;\n            nextCtx.imageSmoothingEnabled = true;\n            nextCtx.imageSmoothingQuality = 'high';\n            \n            // Remove duplicate drawImage call - only draw once\n            nextCtx.drawImage(currentCanvas, 0, 0, nextWidth, nextHeight);\n            \n            currentCanvas = nextCanvas;\n            currentCtx = nextCtx;\n            currentWidth = nextWidth;\n            currentHeight = nextHeight;\n        }\n        \n        // Draw final result to the target canvas\n        ctx.drawImage(currentCanvas, 0, 0, targetWidth, targetHeight);\n    };\n\n    // Ultra quality resize with post-processing\n    const resizeWithSharpening = (\n        ctx: CanvasRenderingContext2D,\n        img: HTMLImageElement,\n        originalWidth: number,\n        originalHeight: number,\n        targetWidth: number,\n        targetHeight: number\n    ) => {\n        // First do multi-step resizing\n        resizeWithSteps(ctx, img, originalWidth, originalHeight, targetWidth, targetHeight);\n        \n        // Apply unsharp mask for better quality\n        const imageData = ctx.getImageData(0, 0, targetWidth, targetHeight);\n        const sharpened = applyUnsharpMask(imageData);\n        ctx.putImageData(sharpened, 0, 0);\n    };\n\n    // Improved unsharp mask implementation\n    const applyUnsharpMask = (imageData: ImageData): ImageData => {\n        const data = imageData.data;\n        const width = imageData.width;\n        const height = imageData.height;\n        const result = new ImageData(width, height);\n        \n        // Copy original data\n        for (let i = 0; i < data.length; i++) {\n            result.data[i] = data[i];\n        }\n        \n        // Gentler sharpening kernel for better quality\n        const sharpenKernel = [\n            0, -0.5, 0,\n            -0.5, 3, -0.5,\n            0, -0.5, 0\n        ];\n        \n        for (let y = 1; y < height - 1; y++) {\n            for (let x = 1; x < width - 1; x++) {\n                for (let c = 0; c < 3; c++) { // RGB channels only\n                    let sum = 0;\n                    for (let ky = 0; ky < 3; ky++) {\n                        for (let kx = 0; kx < 3; kx++) {\n                            const pixelIndex = ((y + ky - 1) * width + (x + kx - 1)) * 4 + c;\n                            sum += data[pixelIndex] * sharpenKernel[ky * 3 + kx];\n                        }\n                    }\n                    \n                    const resultIndex = (y * width + x) * 4 + c;\n                    // Blend with original for gentler sharpening\n                    const original = data[resultIndex];\n                    const sharpened = Math.max(0, Math.min(255, sum));\n                    result.data[resultIndex] = Math.round(original * 0.7 + sharpened * 0.3);\n                }\n            }\n        }\n        \n        return result;\n    };\n\n    // Updated blob version to use advanced quality settings\n    const resizeImageToBlob = (imageSrc: string, width: number, height: number): Promise<Blob> => {\n        return new Promise((resolve) => {\n            const canvas = document.createElement('canvas');\n            canvas.width = width;\n            canvas.height = height;\n\n            const ctx = canvas.getContext('2d');\n            if (!ctx) return;\n\n            const img = new Image();\n            img.src = imageSrc;\n\n            img.onload = () => {\n                const originalWidth = img.width;\n                const originalHeight = img.height;\n                const isUpscaling = width > originalWidth || height > originalHeight;\n                \n                if (!isUpscaling || upscaleQuality === 'standard') {\n                    // Standard resize\n                    ctx.imageSmoothingEnabled = true;\n                    ctx.imageSmoothingQuality = 'high';\n                    ctx.drawImage(img, 0, 0, width, height);\n                } else if (upscaleQuality === 'high') {\n                    // Multi-step resizing\n                    resizeWithSteps(ctx, img, originalWidth, originalHeight, width, height);\n                } else if (upscaleQuality === 'ultra') {\n                    // Ultra quality with sharpening\n                    resizeWithSharpening(ctx, img, originalWidth, originalHeight, width, height);\n                }\n                \n                canvas.toBlob((blob) => {\n                    if (blob) {\n                        resolve(blob);\n                    }\n                }, 'image/png');\n            };\n        });\n    };\n\n    const handleSizeClick = async (size: { width: number; height: number }) => {\n        console.log('Size clicked:', size);\n        if (!imageData) {\n            console.log('No image data available');\n            return;\n        }\n\n        setSelectedSize(size);\n        \n        try {\n            console.log('Starting resize...');\n            const resizedImageData = await resizeImage(imageData, size.width, size.height);\n            console.log('Resize completed, calling onPreviewSizeChange');\n            onPreviewSizeChange(resizedImageData, { width: size.width, height: size.height });\n        } catch (error) {\n            console.error('Error resizing image for preview:', error);\n        }\n    };\n\n    // Handle custom width change with aspect ratio lock\n    const handleCustomWidthChange = (value: string) => {\n        setCustomWidth(value);\n        \n        if (aspectRatioLocked && value && !isNaN(parseInt(value))) {\n            const width = parseInt(value);\n            const height = Math.round(width / originalAspectRatio);\n            setCustomHeight(height.toString());\n        }\n    };\n\n    // Handle custom height change with aspect ratio lock\n    const handleCustomHeightChange = (value: string) => {\n        setCustomHeight(value);\n        \n        if (aspectRatioLocked && value && !isNaN(parseInt(value))) {\n            const height = parseInt(value);\n            const width = Math.round(height * originalAspectRatio);\n            setCustomWidth(width.toString());\n        }\n    };\n\n    // Toggle aspect ratio lock\n    const handleAspectRatioToggle = () => {\n        setAspectRatioLocked(!aspectRatioLocked);\n        \n        // If locking and we have a width, adjust height\n        if (!aspectRatioLocked && customWidth && !isNaN(parseInt(customWidth))) {\n            const width = parseInt(customWidth);\n            const height = Math.round(width / originalAspectRatio);\n            setCustomHeight(height.toString());\n        }\n        // If locking and we have a height but no width, adjust width\n        else if (!aspectRatioLocked && customHeight && !customWidth && !isNaN(parseInt(customHeight))) {\n            const height = parseInt(customHeight);\n            const width = Math.round(height * originalAspectRatio);\n            setCustomWidth(width.toString());\n        }\n    };\n\n    // Update preview when custom dimensions change\n    useEffect(() => {\n        const updateCustomPreview = async () => {\n            if (!imageData || !customWidth || !customHeight || downloadMode !== 'custom') return;\n\n            const width = parseInt(customWidth);\n            const height = parseInt(customHeight);\n\n            if (isNaN(width) || isNaN(height) || width <= 0 || height <= 0) return;\n\n            try {\n                const resizedImageData = await resizeImage(imageData, width, height);\n                onPreviewSizeChange(resizedImageData, { width, height });\n                setSelectedSize({ width, height });\n            } catch (error) {\n                console.error('Error resizing image for custom preview:', error);\n            }\n        };\n\n        if (customWidth && customHeight && downloadMode === 'custom') {\n            updateCustomPreview();\n        }\n    }, [customWidth, customHeight, imageData, onPreviewSizeChange, downloadMode]);\n\n    // Listen for back to original events to reset selection\n    useEffect(() => {\n        const handleResetSelection = () => {\n            setSelectedSize(null);\n            setCustomWidth('');\n            setCustomHeight('');\n        };\n        \n        window.addEventListener('resetDownloadSelection', handleResetSelection);\n        \n        return () => {\n            window.removeEventListener('resetDownloadSelection', handleResetSelection);\n        };\n    }, []);\n\n    // Handle mode changes - clear selections when switching modes\n    const handleModeChange = (mode: 'standard' | 'custom' | 'android' | 'ios') => {\n        setDownloadMode(mode);\n        // Clear all selections when switching modes\n        setCustomWidth('');\n        setCustomHeight('');\n        setSelectedSize(null);\n        setAspectRatioLocked(false);\n        onPreviewSizeChange(imageData, null);\n    };\n\n    const handleDownloadStandard = async () => {\n        if (!imageData) return;\n\n        setIsGenerating(true);\n        \n        try {\n            const zip = new JSZip();\n            const imageFolder = zip.folder('image-assets');\n\n            const promises = sizes.map(async (size) => {\n                const blob = await resizeImageToBlob(imageData, size.width, size.height);\n                const fileName = `${size.width}x${size.height}.png`;\n                imageFolder?.file(fileName, blob);\n            });\n\n            await Promise.all(promises);\n\n            const zipBlob = await zip.generateAsync({ type: 'blob' });\n            const url = URL.createObjectURL(zipBlob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = 'image-assets.zip';\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n\n        } catch (error) {\n            console.error('Error generating ZIP file:', error);\n        } finally {\n            setIsGenerating(false);\n        }\n    };\n\n    const handleDownloadAndroid = async () => {\n        if (!imageData) return;\n\n        setIsGenerating(true);\n        \n        try {\n            const zip = new JSZip();\n            const androidFolder = zip.folder('android-icons');\n\n            const promises = androidSizes.map(async (size) => {\n                const blob = await resizeImageToBlob(imageData, size.width, size.height);\n                const fileName = `ic_launcher_${size.name}_${size.width}x${size.height}.png`;\n                androidFolder?.file(fileName, blob);\n            });\n\n            await Promise.all(promises);\n\n            const zipBlob = await zip.generateAsync({ type: 'blob' });\n            const url = URL.createObjectURL(zipBlob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = 'android-app-icons.zip';\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n\n        } catch (error) {\n            console.error('Error generating Android ZIP file:', error);\n        } finally {\n            setIsGenerating(false);\n        }\n    };\n\n    const handleDownloadIOS = async () => {\n        if (!imageData) return;\n\n        setIsGenerating(true);\n        \n        try {\n            const zip = new JSZip();\n            const iosFolder = zip.folder('ios-icons');\n\n            const promises = iosSizes.map(async (size) => {\n                const blob = await resizeImageToBlob(imageData, size.width, size.height);\n                const fileName = `icon_${size.name}_${size.width}x${size.height}.png`;\n                iosFolder?.file(fileName, blob);\n            });\n\n            await Promise.all(promises);\n\n            const zipBlob = await zip.generateAsync({ type: 'blob' });\n            const url = URL.createObjectURL(zipBlob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = 'ios-app-icons.zip';\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n\n        } catch (error) {\n            console.error('Error generating iOS ZIP file:', error);\n        } finally {\n            setIsGenerating(false);\n        }\n    };\n\n    const handleDownloadCustom = async () => {\n        if (!imageData || !isCustomSizeValid) return;\n\n        setIsGenerating(true);\n        \n        try {\n            const width = parseInt(customWidth);\n            const height = parseInt(customHeight);\n            const blob = await resizeImageToBlob(imageData, width, height);\n            \n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = `custom-image-${width}x${height}.png`;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n\n        } catch (error) {\n            console.error('Error downloading custom image:', error);\n        } finally {\n            setIsGenerating(false);\n        }\n    };\n\n    // Reset when imageData changes\n    useEffect(() => {\n        console.log('DownloadButton useEffect triggered, imageData changed');\n        setSelectedSize(null);\n        setCustomWidth('');\n        setCustomHeight('');\n        setDownloadMode('standard');\n        setAspectRatioLocked(false);\n        if (imageData) {\n            onPreviewSizeChange(imageData, null);\n        }\n    }, [imageData]);\n\n    const getCurrentSizes = () => {\n        switch (downloadMode) {\n            case 'android':\n                return androidSizes;\n            case 'ios':\n                return iosSizes;\n            default:\n                return previewSizes;\n        }\n    };\n\n    const getCurrentDownloadHandler = () => {\n        switch (downloadMode) {\n            case 'android':\n                return handleDownloadAndroid;\n            case 'ios':\n                return handleDownloadIOS;\n            case 'custom':\n                return handleDownloadCustom;\n            default:\n                return handleDownloadStandard;\n        }\n    };\n\n    const getDownloadButtonText = () => {\n        if (isGenerating) return 'Generating...';\n        \n        switch (downloadMode) {\n            case 'android':\n                return 'Download Android Icons (ZIP)';\n            case 'ios':\n                return 'Download iOS Icons (ZIP)';\n            case 'custom':\n                return `Download Custom ${isCustomSizeValid ? `(${customWidth}×${customHeight})` : ''}`;\n            default:\n                return 'Download All Sizes (ZIP)';\n        }\n    };\n\n    const getDownloadIcon = () => {\n        if (isGenerating) return '⏳';\n        \n        switch (downloadMode) {\n            case 'android':\n                return (\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 413.137 413.137\" fill=\"currentColor\">\n                        <g>\n                            <path d=\"M311.358,136.395H101.779c-4.662,0-8.441,3.779-8.441,8.441v175.749\n                                c0,4.662,3.779,8.441,8.441,8.441h37.363v59.228c0,13.742,11.14,24.883,24.883,24.883l0,0c13.742,0,24.883-11.14,24.883-24.883\n                                v-59.228h34.803v59.228c0,13.742,11.14,24.883,24.883,24.883l0,0c13.742,0,24.883-11.14,24.883-24.883v-59.228h37.882\n                                c4.662,0,8.441-3.779,8.441-8.441V144.836C319.799,140.174,316.02,136.395,311.358,136.395z\"/>\n                            <path d=\"M57.856,136.354L57.856,136.354c-13.742,0-24.883,11.14-24.883,24.883v101.065\n                                c0,13.742,11.14,24.883,24.883,24.883l0,0c13.742,0,24.883-11.14,24.883-24.883V161.237\n                                C82.738,147.495,71.598,136.354,57.856,136.354z\"/>\n                            <path d=\"M355.281,136.354L355.281,136.354c-13.742,0-24.883,11.14-24.883,24.883v101.065\n                                c0,13.742,11.14,24.883,24.883,24.883l0,0c13.742,0,24.883-11.14,24.883-24.883V161.237\n                                C380.164,147.495,369.024,136.354,355.281,136.354z\"/>\n                            <path d=\"M103.475,124.069h205.692c5.366,0,9.368-4.943,8.266-10.195\n                                c-6.804-32.428-27.45-59.756-55.465-75.543l17.584-31.727c1.19-2.148,0.414-4.855-1.734-6.045\n                                c-2.153-1.193-4.856-0.414-6.046,1.734l-17.717,31.966c-14.511-6.734-30.683-10.495-47.734-10.495\n                                c-17.052,0-33.224,3.761-47.735,10.495L140.869,2.292c-1.191-2.149-3.898-2.924-6.045-1.734c-2.148,1.19-2.924,3.897-1.734,6.045\n                                l17.584,31.727c-28.015,15.788-48.661,43.115-55.465,75.544C94.106,119.126,98.108,124.069,103.475,124.069z M267.697,76.786\n                                c0,5.282-4.282,9.565-9.565,9.565c-5.282,0-9.565-4.282-9.565-9.565c0-5.282,4.282-9.565,9.565-9.565\n                                C263.415,67.221,267.697,71.504,267.697,76.786z M154.508,67.221c5.282,0,9.565,4.282,9.565,9.565c0,5.282-4.282,9.565-9.565,9.565\n                                c-5.282,0-9.565-4.282-9.565-9.565C144.943,71.504,149.225,67.221,154.508,67.221z\"/>\n                        </g>\n                    </svg>\n                );\n            case 'ios':\n                return (\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                        <path d=\"M18.71 19.5c-.83 1.24-1.71 2.45-3.05 2.47-1.34.03-1.77-.79-3.29-.79-1.53 0-2 .77-3.27.82-1.31.05-2.3-1.32-3.14-2.53C4.25 17 2.94 12.45 4.7 9.39c.87-1.52 2.43-2.48 4.12-2.51 1.28-.02 2.5.87 3.29.87.78 0 2.26-1.07 3.81-.91.65.03 2.47.26 3.64 1.98-.09.06-2.17 1.28-2.15 3.81.03 3.02 2.65 4.03 2.68 4.04-.03.07-.42 1.44-1.38 2.83M13 3.5c.73-.83 1.94-1.46 2.94-1.5.13 1.17-.34 2.35-1.04 3.19-.69.85-1.83 1.51-2.95 1.42-.15-1.15.41-2.35 1.05-3.11z\"/>\n                    </svg>\n                );\n            case 'custom':\n                return '⬇️';\n            default:\n                return '📦';\n        }\n    };\n\n    const isCustomSizeValid = customWidth && customHeight && !isNaN(parseInt(customWidth)) && !isNaN(parseInt(customHeight));\n\n    return (\n        <div className=\"download-container\">\n            {/* Upscale Quality Selector */}\n            <div className=\"upscale-quality-section\">\n                <h4>🔍 Upscaling Quality:</h4>\n                <div className=\"quality-buttons\">\n                    <button\n                        className={`quality-button ${upscaleQuality === 'standard' ? 'active' : ''}`}\n                        onClick={() => setUpscaleQuality('standard')}\n                    >\n                        Standard\n                    </button>\n                    <button\n                        className={`quality-button ${upscaleQuality === 'high' ? 'active' : ''}`}\n                        onClick={() => setUpscaleQuality('high')}\n                    >\n                        High\n                    </button>\n                    <button\n                        className={`quality-button ${upscaleQuality === 'ultra' ? 'active' : ''}`}\n                        onClick={() => setUpscaleQuality('ultra')}\n                    >\n                        Ultra\n                    </button>\n                </div>\n                <div className=\"quality-info\">\n                    <small>\n                        {upscaleQuality === 'standard' && 'Fast processing, basic quality'}\n                        {upscaleQuality === 'high' && 'Multi-step resizing for better quality'}\n                        {upscaleQuality === 'ultra' && 'Advanced algorithms, best quality (slower)'}\n                    </small>\n                </div>\n            </div>\n            \n            {/* Main toggle with 4 options */}\n            <div className=\"main-download-toggle\">\n                <button\n                    className={`main-toggle-button ${downloadMode === 'standard' ? 'active' : ''}`}\n                    onClick={() => handleModeChange('standard')}\n                >\n                    📦 Standard\n                </button>\n                <button\n                    className={`main-toggle-button ${downloadMode === 'android' ? 'active' : ''}`}\n                    onClick={() => handleModeChange('android')}\n                >\n                    <svg \n                        width=\"16\" \n                        height=\"16\" \n                        viewBox=\"0 0 413.137 413.137\" \n                        fill={downloadMode === 'android' ? 'currentColor' : '#4CAF50'}\n                        style={{ marginRight: '6px' }}\n                    >\n                        <g>\n                            <path d=\"M311.358,136.395H101.779c-4.662,0-8.441,3.779-8.441,8.441v175.749\n                                c0,4.662,3.779,8.441,8.441,8.441h37.363v59.228c0,13.742,11.14,24.883,24.883,24.883l0,0c13.742,0,24.883-11.14,24.883-24.883\n                                v-59.228h34.803v59.228c0,13.742,11.14,24.883,24.883,24.883l0,0c13.742,0,24.883-11.14,24.883-24.883v-59.228h37.882\n                                c4.662,0,8.441-3.779,8.441-8.441V144.836C319.799,140.174,316.02,136.395,311.358,136.395z\"/>\n                            <path d=\"M57.856,136.354L57.856,136.354c-13.742,0-24.883,11.14-24.883,24.883v101.065\n                                c0,13.742,11.14,24.883,24.883,24.883l0,0c13.742,0,24.883-11.14,24.883-24.883V161.237\n                                C82.738,147.495,71.598,136.354,57.856,136.354z\"/>\n                            <path d=\"M355.281,136.354L355.281,136.354c-13.742,0-24.883,11.14-24.883,24.883v101.065\n                                c0,13.742,11.14,24.883,24.883,24.883l0,0c13.742,0,24.883-11.14,24.883-24.883V161.237\n                                C380.164,147.495,369.024,136.354,355.281,136.354z\"/>\n                            <path d=\"M103.475,124.069h205.692c5.366,0,9.368-4.943,8.266-10.195\n                                c-6.804-32.428-27.45-59.756-55.465-75.543l17.584-31.727c1.19-2.148,0.414-4.855-1.734-6.045\n                                c-2.153-1.193-4.856-0.414-6.046,1.734l-17.717,31.966c-14.511-6.734-30.683-10.495-47.734-10.495\n                                c-17.052,0-33.224,3.761-47.735,10.495L140.869,2.292c-1.191-2.149-3.898-2.924-6.045-1.734c-2.148,1.19-2.924,3.897-1.734,6.045\n                                l17.584,31.727c-28.015,15.788-48.661,43.115-55.465,75.544C94.106,119.126,98.108,124.069,103.475,124.069z M267.697,76.786\n                                c0,5.282-4.282,9.565-9.565,9.565c-5.282,0-9.565-4.282-9.565-9.565c0-5.282,4.282-9.565,9.565-9.565\n                                C263.415,67.221,267.697,71.504,267.697,76.786z M154.508,67.221c5.282,0,9.565,4.282,9.565,9.565c0,5.282-4.282,9.565-9.565,9.565\n                                c-5.282,0-9.565-4.282-9.565-9.565C144.943,71.504,149.225,67.221,154.508,67.221z\"/>\n                        </g>\n                    </svg>\n                    Android\n                </button>\n                <button\n                    className={`main-toggle-button ${downloadMode === 'ios' ? 'active' : ''}`}\n                    onClick={() => handleModeChange('ios')}\n                >\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\" style={{ marginRight: '6px' }}>\n                        <path d=\"M18.71 19.5c-.83 1.24-1.71 2.45-3.05 2.47-1.34.03-1.77-.79-3.29-.79-1.53 0-2 .77-3.27.82-1.31.05-2.3-1.32-3.14-2.53C4.25 17 2.94 12.45 4.7 9.39c.87-1.52 2.43-2.48 4.12-2.51 1.28-.02 2.5.87 3.29.87.78 0 2.26-1.07 3.81-.91.65.03 2.47.26 3.64 1.98-.09.06-2.17 1.28-2.15 3.81.03 3.02 2.65 4.03 2.68 4.04-.03.07-.42 1.44-1.38 2.83M13 3.5c.73-.83 1.94-1.46 2.94-1.5.13 1.17-.34 2.35-1.04 3.19-.69.85-1.83 1.51-2.95 1.42-.15-1.15.41-2.35 1.05-3.11z\"/>\n                    </svg>\n                    iOS\n                </button>\n                <button\n                    className={`main-toggle-button ${downloadMode === 'custom' ? 'active' : ''}`}\n                    onClick={() => handleModeChange('custom')}\n                >\n                    🎯 Custom\n                </button>\n            </div>\n\n            {/* Standard, Android, and iOS sizes container */}\n            {(downloadMode === 'standard' || downloadMode === 'android' || downloadMode === 'ios') && (\n                <div className=\"standard-container\">\n                    <div className=\"size-preview\">\n                        <h3>\n                            {downloadMode === 'standard' && '📦 Click size to preview:'}\n                            {downloadMode === 'android' && (\n                                <>\n                                    <svg \n                                        width=\"20\" \n                                        height=\"20\" \n                                        viewBox=\"0 0 413.137 413.137\" \n                                        fill=\"#4CAF50\"\n                                        style={{ marginRight: '8px', verticalAlign: 'middle' }}\n                                    >\n                                        <g>\n                                            <path d=\"M311.358,136.395H101.779c-4.662,0-8.441,3.779-8.441,8.441v175.749\n                                                c0,4.662,3.779,8.441,8.441,8.441h37.363v59.228c0,13.742,11.14,24.883,24.883,24.883l0,0c13.742,0,24.883-11.14,24.883-24.883\n                                                v-59.228h34.803v59.228c0,13.742,11.14,24.883,24.883,24.883l0,0c13.742,0,24.883-11.14,24.883-24.883v-59.228h37.882\n                                                c4.662,0,8.441-3.779,8.441-8.441V144.836C319.799,140.174,316.02,136.395,311.358,136.395z\"/>\n                                            <path d=\"M57.856,136.354L57.856,136.354c-13.742,0-24.883,11.14-24.883,24.883v101.065\n                                                c0,13.742,11.14,24.883,24.883,24.883l0,0c13.742,0,24.883-11.14,24.883-24.883V161.237\n                                                C82.738,147.495,71.598,136.354,57.856,136.354z\"/>\n                                            <path d=\"M355.281,136.354L355.281,136.354c-13.742,0-24.883,11.14-24.883,24.883v101.065\n                                                c0,13.742,11.14,24.883,24.883,24.883l0,0c13.742,0,24.883-11.14,24.883-24.883V161.237\n                                                C380.164,147.495,369.024,136.354,355.281,136.354z\"/>\n                                            <path d=\"M103.475,124.069h205.692c5.366,0,9.368-4.943,8.266-10.195\n                                                c-6.804-32.428-27.45-59.756-55.465-75.543l17.584-31.727c1.19-2.148,0.414-4.855-1.734-6.045\n                                                c-2.153-1.193-4.856-0.414-6.046,1.734l-17.717,31.966c-14.511-6.734-30.683-10.495-47.734-10.495\n                                                c-17.052,0-33.224,3.761-47.735,10.495L140.869,2.292c-1.191-2.149-3.898-2.924-6.045-1.734c-2.148,1.19-2.924,3.897-1.734,6.045\n                                                l17.584,31.727c-28.015,15.788-48.661,43.115-55.465,75.544C94.106,119.126,98.108,124.069,103.475,124.069z M267.697,76.786\n                                                c0,5.282-4.282,9.565-9.565,9.565c-5.282,0-9.565-4.282-9.565-9.565c0-5.282,4.282-9.565,9.565-9.565\n                                                C263.415,67.221,267.697,71.504,267.697,76.786z M154.508,67.221c5.282,0,9.565,4.282,9.565,9.565c0,5.282-4.282,9.565-9.565,9.565\n                                                c-5.282,0-9.565-4.282-9.565-9.565C144.943,71.504,149.225,67.221,154.508,67.221z\"/>\n                                        </g>\n                                    </svg>\n                                    Android App Icon Sizes:\n                                </>\n                            )}\n                            {downloadMode === 'ios' && (\n                                <>\n                                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\" style={{ marginRight: '8px', verticalAlign: 'middle' }}>\n                                        <path d=\"M18.71 19.5c-.83 1.24-1.71 2.45-3.05 2.47-1.34.03-1.77-.79-3.29-.79-1.53 0-2 .77-3.27.82-1.31.05-2.3-1.32-3.14-2.53C4.25 17 2.94 12.45 4.7 9.39c.87-1.52 2.43-2.48 4.12-2.51 1.28-.02 2.5.87 3.29.87.78 0 2.26-1.07 3.81-.91.65.03 2.47.26 3.64 1.98-.09.06-2.17 1.28-2.15 3.81.03 3.02 2.65 4.03 2.68 4.04-.03.07-.42 1.44-1.38 2.83M13 3.5c.73-.83 1.94-1.46 2.94-1.5.13 1.17-.34 2.35-1.04 3.19-.69.85-1.83 1.51-2.95 1.42-.15-1.15.41-2.35 1.05-3.11z\"/>\n                                    </svg>\n                                    iOS App Icon Sizes:\n                                </>\n                            )}\n                        </h3>\n                        <div className=\"size-grid\">\n                            {getCurrentSizes().map((size) => (\n                                <div \n                                    key={`${size.width}x${size.height}`}\n                                    className={`size-item ${\n                                        selectedSize?.width === size.width && selectedSize?.height === size.height\n                                            ? 'selected' \n                                            : ''\n                                    }`}\n                                    onClick={() => handleSizeClick(size)}\n                                    title={downloadMode !== 'standard' ? size.name : undefined}\n                                >\n                                    {size.width}×{size.height}\n                                    {downloadMode !== 'standard' && size.name && (\n                                        <span className=\"size-name\">{size.name}</span>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Custom size container */}\n            {downloadMode === 'custom' && (\n                <div className=\"custom-container\">\n                    <div className=\"custom-form\">\n                        <h3>🎯 Enter custom dimensions:</h3>\n                        \n                        {/* Custom inputs and aspect ratio toggle on same line */}\n                        <div className=\"custom-controls-row\">\n                            <div className=\"custom-inputs\">\n                                <input\n                                    type=\"number\"\n                                    placeholder=\"Width\"\n                                    value={customWidth}\n                                    onChange={(e) => handleCustomWidthChange(e.target.value)}\n                                    className=\"custom-input no-arrows\"\n                                />\n                                <span className=\"input-separator\">×</span>\n                                <input\n                                    type=\"number\"\n                                    placeholder=\"Height\"\n                                    value={customHeight}\n                                    onChange={(e) => handleCustomHeightChange(e.target.value)}\n                                    className=\"custom-input no-arrows\"\n                                />\n                            </div>\n                            \n                            <div className=\"aspect-ratio-toggle\">\n                                <button \n                                    className={`aspect-ratio-button ${aspectRatioLocked ? 'locked' : ''}`}\n                                    onClick={handleAspectRatioToggle}\n                                    title={aspectRatioLocked ? 'Unlock aspect ratio' : 'Lock aspect ratio'}\n                                >\n                                    {aspectRatioLocked ? '🔒' : '🔓'} \n                                    {aspectRatioLocked ? ' Aspect Ratio Locked' : ' Lock Aspect Ratio'}\n                                </button>\n                            </div>\n                        </div>\n                        \n                        {aspectRatioLocked && (\n                            <div className=\"aspect-ratio-info\">\n                                <small>Aspect ratio: {originalAspectRatio.toFixed(3)}</small>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            )}\n\n            {/* Download button at the bottom */}\n            <button \n                className=\"download-button\" \n                onClick={getCurrentDownloadHandler()}\n                disabled={!imageData || isGenerating || (downloadMode === 'custom' && !isCustomSizeValid)}\n            >\n                <span className=\"download-icon\">\n                    {getDownloadIcon()}\n                </span>\n                {getDownloadButtonText()}\n            </button>\n        </div>\n    );\n};\n\nexport default DownloadButton;","import React from 'react';\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <footer className=\"app-footer\">\r\n            <div className=\"footer-content\">\r\n                <div className=\"footer-bottom\">\r\n                    <div className=\"footer-left\">\r\n                        <span className=\"footer-year\">© 2025</span>\r\n                        <p>Built by <strong>Dragos Petrescu</strong></p>\r\n                    </div>\r\n                    <div className=\"footer-center\">\r\n                        <div className=\"footer-tech\">\r\n                            <a \r\n                                href=\"https://react.dev\" \r\n                                target=\"_blank\" \r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"tech-link react\"\r\n                                aria-label=\"Built with React\"\r\n                            >\r\n                                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                    <path d=\"M14.23 12.004a2.236 2.236 0 0 1-2.235 2.236 2.236 2.236 0 0 1-2.236-2.236 2.236 2.236 0 0 1 2.235-2.236 2.236 2.236 0 0 1 2.236 2.236zm2.648-10.69c-1.346 0-3.107.96-4.888 2.622-1.78-1.653-3.542-2.602-4.887-2.602-.41 0-.783.093-1.106.278-1.375.793-1.683 3.264-.973 6.365C1.98 8.917 0 10.42 0 12.004c0 1.59 1.99 3.097 5.043 4.03-.704 3.113-.39 5.588.988 6.38.32.187.69.275 1.102.275 1.345 0 3.107-.96 4.888-2.624 1.78 1.654 3.542 2.603 4.887 2.603.41 0 .783-.09 1.106-.275 1.374-.792 1.683-3.263.973-6.365C22.02 15.096 24 13.59 24 12.004c0-1.59-1.99-3.097-5.043-4.032.704-3.11.39-5.587-.988-6.38-.318-.184-.688-.277-1.092-.278zm-.005 1.09v.006c.225 0 .406.044.558.127.666.382.955 1.835.73 3.704-.054.46-.142.945-.25 1.44-.96-.236-2.006-.417-3.107-.534-.66-.905-1.345-1.727-2.035-2.447 1.592-1.48 3.087-2.292 4.105-2.295zm-9.77.02c1.012 0 2.514.808 4.11 2.28-.686.72-1.37 1.537-2.02 2.442-1.107.117-2.154.298-3.113.538-.112-.49-.195-.964-.254-1.42-.23-1.868.054-3.32.714-3.707.19-.09.4-.127.563-.132zm4.882 3.05c.455.468.91.992 1.36 1.564-.44-.02-.89-.034-1.36-.034-.47 0-.92.014-1.36.034.44-.572.895-1.096 1.36-1.564zM12 8.1c.74 0 1.477.034 2.202.093.406.582.802 1.203 1.183 1.86.372.64.71 1.29 1.018 1.946-.308.655-.646 1.31-1.013 1.95-.38.66-.773 1.288-1.18 1.87-.728.063-1.466.098-2.21.098-.74 0-1.477-.035-2.202-.093-.406-.582-.802-1.204-1.183-1.86-.372-.64-.71-1.29-1.018-1.946.303-.657.646-1.313 1.013-1.954.38-.66.773-1.286 1.18-1.868.728-.064 1.466-.098 2.21-.098zm-3.635.254c-.24.377-.48.763-.704 1.16-.225.39-.435.782-.635 1.174-.265-.656-.49-1.31-.676-1.947.64-.15 1.315-.283 2.015-.386zm7.26 0c.695.103 1.365.23 2.006.387-.18.632-.405 1.282-.66 1.933-.2-.39-.41-.783-.64-1.174-.225-.392-.465-.774-.705-1.146zm3.063.675c.484.15.944.317 1.375.498 1.732.74 2.852 1.708 2.852 2.476-.005.768-1.125 1.74-2.857 2.475-.42.18-.88.342-1.355.493-.28-.958-.646-1.956-1.1-2.98.45-1.017.81-2.01 1.085-2.964zm-13.395.004c.278.96.645 1.957 1.1 2.98-.45 1.017-.812 2.01-1.086 2.964-.484-.15-.944-.318-1.37-.5-1.732-.737-2.852-1.706-2.852-2.474 0-.768 1.12-1.742 2.852-2.476.42-.18.88-.342 1.356-.494zm11.678 4.28c.265.657.49 1.312.676 1.948-.64.157-1.316.29-2.016.39.24-.375.48-.762.705-1.148.225-.39.435-.788.636-1.19zm-9.945.02c.2.392.41.783.64 1.175.23.39.465.772.705 1.143-.695-.102-1.365-.23-2.006-.386.18-.63.405-1.282.66-1.933zM17.92 16.32c.112.493.2.968.254 1.423.23 1.868-.054 3.32-.714 3.708-.147.09-.338.128-.563.128-1.012 0-2.514-.807-4.11-2.28.686-.72 1.37-1.536 2.02-2.44 1.107-.118 2.154-.3 3.113-.54zm-11.83.01c.96.234 2.006.415 3.107.532.66.905 1.345 1.727 2.035 2.446-1.595 1.483-3.092 2.295-4.11 2.295-.22-.005-.406-.05-.553-.132-.666-.38-.955-1.834-.73-3.703.054-.46.142-.944.25-1.438zm4.56.64c.44.02.89.034 1.36.034.47 0 .92-.014 1.36-.034-.44.572-.895 1.095-1.36 1.56-.465-.467-.92-.988-1.36-1.56z\"/>\r\n                                </svg>\r\n                                React\r\n                            </a>\r\n                            <a \r\n                                href=\"https://www.typescriptlang.org\" \r\n                                target=\"_blank\" \r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"tech-link typescript\"\r\n                                aria-label=\"Built with TypeScript\"\r\n                            >\r\n                                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                    <path d=\"M1.125 0C.502 0 0 .502 0 1.125v21.75C0 23.498.502 24 1.125 24h21.75c.623 0 1.125-.502 1.125-1.125V1.125C24 .502 23.498 0 22.875 0zm17.363 9.75c.612 0 1.154.037 1.627.111a6.38 6.38 0 0 1 1.306.34v2.458a3.95 3.95 0 0 0-.643-.361 5.093 5.093 0 0 0-.717-.26 5.453 5.453 0 0 0-1.426-.2c-.3 0-.573.028-.819.086a2.1 2.1 0 0 0-.623.242c-.17.104-.3.229-.393.374a.888.888 0 0 0-.14.49c0 .196.053.373.156.529.104.156.252.304.443.444s.423.276.696.41c.273.135.582.274.926.416.47.197.892.407 1.266.628.374.222.695.473.963.753.268.279.472.598.614.957.142.359.214.776.214 1.253 0 .657-.125 1.21-.373 1.656a3.033 3.033 0 0 1-1.012 1.085 4.38 4.38 0 0 1-1.487.596c-.566.12-1.163.18-1.79.18a9.916 9.916 0 0 1-1.84-.164 5.544 5.544 0 0 1-1.512-.493v-2.63a5.033 5.033 0 0 0 3.237 1.2c.333 0 .624-.03.872-.09.249-.06.456-.144.623-.25.166-.108.29-.234.373-.38a1.023 1.023 0 0 0-.074-1.089 2.12 2.12 0 0 0-.537-.5 5.597 5.597 0 0 0-.807-.444 27.72 27.72 0 0 0-1.007-.436c-.918-.383-1.602-.852-2.053-1.405-.45-.553-.676-1.222-.676-2.005 0-.614.123-1.141.369-1.582.246-.441.58-.804 1.004-1.089a4.494 4.494 0 0 1 1.47-.629 7.536 7.536 0 0 1 1.77-.201zm-15.113.188h9.563v2.166H9.506v9.646H6.789v-9.646H3.375z\"/>\r\n                                </svg>\r\n                                TypeScript\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"footer-right\">\r\n                        <div className=\"footer-social\">\r\n                            <a \r\n                                href=\"https://github.com/Dragos20Tech\" \r\n                                target=\"_blank\" \r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"social-link github\"\r\n                                aria-label=\"GitHub Profile\"\r\n                            >\r\n                                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                    <path d=\"M12 0C5.374 0 0 5.373 0 12 0 17.302 3.438 21.8 8.207 23.387c.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z\"/>\r\n                                </svg>\r\n                                {/* GitHub */}\r\n                            </a>\r\n                            <a \r\n                                href=\"https://www.linkedin.com/in/dragospetrescu2001/\" \r\n                                target=\"_blank\" \r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"social-link linkedin\"\r\n                                aria-label=\"LinkedIn Profile\"\r\n                            >\r\n                                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                    <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\r\n                                </svg>\r\n                                {/* LinkedIn */}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { useState, useCallback } from 'react';\nimport ImageUploader from './components/ImageUploader';\nimport ImagePreview from './components/ImagePreview';\nimport DownloadButton from './components/DownloadButton';\nimport Footer from './components/Footer';\nimport './App.css';\n\nconst App = () => {\n    const [image, setImage] = useState<File | null>(null);\n    const [imageSrc, setImageSrc] = useState<string | null>(null);\n    const [previewImageSrc, setPreviewImageSrc] = useState<string | null>(null);\n    const [previewSize, setPreviewSize] = useState<{ width: number; height: number } | null>(null);\n\n    const handleImageUpload = (file: File) => {\n        setImage(file);\n        const reader = new FileReader();\n        reader.onload = () => {\n            const result = String(reader.result);\n            setImageSrc(result);\n            setPreviewImageSrc(result); // Set original as default preview\n            setPreviewSize(null);\n        };\n        reader.readAsDataURL(file);\n    };\n\n    // Memoize the callback to prevent unnecessary re-renders\n    const handlePreviewSizeChange = useCallback((resizedImageData: string | null, size: { width: number; height: number } | null) => {\n        console.log('Preview size change:', size); // Debug log\n        setPreviewImageSrc(resizedImageData || imageSrc);\n        setPreviewSize(size);\n    }, [imageSrc]);\n\n    // Memoize the back to original callback\n    const handleBackToOriginal = useCallback(() => {\n        console.log('Back to original called'); // Debug log\n        setPreviewImageSrc(imageSrc);\n        setPreviewSize(null);\n        // Trigger a custom event to reset download selection\n        window.dispatchEvent(new CustomEvent('resetDownloadSelection'));\n    }, [imageSrc]);\n\n    // Show back button when there's a preview size (not original)\n    const shouldShowBackButton = previewSize !== null;\n\n    return (\n        <div className=\"app-container\">\n            <h1 className=\"app-title\">🎨 Image Asset Generator</h1>\n            <div className=\"main-content\">\n                {!imageSrc ? (\n                    // Full-width upload section when no image\n                    <div className=\"upload-section\">\n                        <h2 className=\"section-title\">Upload Image</h2>\n                        <ImageUploader onUpload={handleImageUpload} />\n                    </div>\n                ) : (\n                    // Two-column layout when image is uploaded\n                    <div className=\"content-grid\">\n                        <div className=\"section\">\n                            {/* <h2 className=\"section-title\">Upload New Image</h2> */}\n                            <ImageUploader onUpload={handleImageUpload} />\n                            \n                            {/* Download section moved here */}\n                            <div className=\"download-section-inline\">\n                                {/* <h2 className=\"section-title\">Download All Sizes</h2> */}\n                                <DownloadButton \n                                    imageData={imageSrc} \n                                    onPreviewSizeChange={handlePreviewSizeChange}\n                                    onBackToOriginal={handleBackToOriginal}\n                                />\n                            </div>\n                        </div>\n                        \n                        <div className=\"section preview-section\">\n                            {/* <h2 className=\"section-title\">Preview</h2> */}\n                            <div className=\"preview-header\">\n                                <span className=\"preview-size-label\">\n                                    {previewSize ? (\n                                        `📐 Preview: ${previewSize.width}×${previewSize.height}`\n                                    ) : (\n                                        `📐 Original Size`\n                                    )}\n                                </span>\n                                {shouldShowBackButton && (\n                                    <button \n                                        className=\"back-to-original-button\"\n                                        onClick={handleBackToOriginal}\n                                    >\n                                        🔄 Back to Original\n                                    </button>\n                                )}\n                            </div>\n                            <ImagePreview imageSrc={previewImageSrc} />\n                        </div>\n                    </div>\n                )}\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}